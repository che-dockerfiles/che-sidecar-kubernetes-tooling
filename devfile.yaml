apiVersion: 1.0.0

metadata:
  name: kubernetes-tooling-dev

projects:
  - name: che-sidecar-kubernetes-tooling
    source:
      location: 'https://github.com/che-dockerfiles/che-sidecar-kubernetes-tooling'
      type: git
      branch: master

components:
  - type: cheEditor
    id: eclipse/che-theia/7.10.0
    memoryLimit: 1500M

  - type: dockerimage
    image: 'quay.io/eclipse/che-sidecar-kubernetes-tooling:1.1.0-31a8464'
    alias: buildah-dev
    mountSources: true
    memoryLimit: 3Gi
    env:
      - name: PLUGIN_REMOTE_ENDPOINT_EXECUTABLE
        value: 'tail -f /dev/null'

commands:

  - name: '1. Login to quay.io'
    actions:
      - workdir: /projects/che-sidecar-kubernetes-tooling
        type: exec
        command: |
          if [ ! -f "/tmp/username" ]; then \
            read -p "Username: " USERNAME && \
            buildah login --username $USERNAME quay.io && \
            echo $USERNAME > /tmp/username && \
            echo 'Done'; \
          else \
            echo 'You already logged in as' `cat /tmp/username`; \
          fi
        component: buildah-dev

  - name: '2. Build the image'
    actions:
      - workdir: /projects/che-sidecar-kubernetes-tooling
        type: exec
        command: |
          if [ -f "/tmp/username" ]; then \
            USERNAME=`cat /tmp/username`; \
            buildah bud -t quay.io/$USERNAME/che-sidecar-kubernetes-tooling:dev .; \
            echo 'Image built'; \
            buildah images; \
            echo 'Done'; \
          else \
            echo 'You need to login the first'; \
          fi
        component: buildah-dev

  - name: '3. Push to quay.io'
    actions:
      - workdir: /projects/che-sidecar-kubernetes-tooling
        type: exec
        command: |
          if [ -f "/tmp/username" ]; then \
            USERNAME=`cat /tmp/username`; \
            PLUGIN_IMAGE_ID=`buildah images -q quay.io/$USERNAME/che-sidecar-kubernetes-tooling`; \
            echo 'The last built image ID is :' $PLUGIN_IMAGE_ID; \
            PLUGIN_IMAGE=quay.io/$USERNAME/che-sidecar-kubernetes-tooling:dev; \
            echo 'Writing plugin image to a file in temp...'; \
            echo $PLUGIN_IMAGE > /tmp/plugin_image; \
            echo 'Pushing image' $PLUGIN_IMAGE; \
            buildah push $PLUGIN_IMAGE_ID docker://$PLUGIN_IMAGE; \
            echo 'Done'; \
          else \
            echo 'The first, you need to login and build the image'; \
          fi
        component: buildah-dev

  - name: '4. Create Gist with plugin meta.yaml'
    actions:
      - workdir: /projects/che-sidecar-kubernetes-tooling
        type: exec
        command: |
          if [ -f "/tmp/username" ]; then \
            echo 'Downloading template for plugin meta.yaml...'; \
            curl -o /tmp/plugin-template.meta.yaml https://raw.githubusercontent.com/vitaliy-guliy/che-sidecar-kubernetes-tooling/dev/plugin-template.meta.yaml; \
            echo 'Generating plugin meta.yaml...'; \
            PLUGIN_IMAGE=`cat /tmp/plugin_image`; \
            PLUGIN_META_YAML=`node -pe "JSON.stringify(require('fs').readFileSync('/tmp/plugin-template.meta.yaml').toString().replace(/PLUGIN_IMAGE/g, '$PLUGIN_IMAGE'))"`; \
            read -p "GitHub login: " GITHUB_LOGIN; \
            read -s -p "GitHub password: " GITHUB_PASSWORD; \
            echo 'Pushing plugin meta.yaml to gist...'; \
            POST_DATA='{"public":true,"files":{"plugin.meta.yaml":{"content":'$PLUGIN_META_YAML'}}}'; \
            CURL_COMMAND=`echo "curl -X POST -d '"$POST_DATA"' -u "$GITHUB_LOGIN:$GITHUB_PASSWORD" https://api.github.com/gists > /tmp/plugin.gist.json"`; \
            eval $CURL_COMMAND; \
            PLUGIN_GIST_URL=`node -pe "JSON.parse(require('fs').readFileSync('/tmp/plugin.gist.json').toString()).files['plugin.meta.yaml'].raw_url"`; \
            echo 'Plugin gist URL' $PLUGIN_GIST_URL; \
            echo $PLUGIN_GIST_URL > /tmp/plugin.gist.url; \
            echo 'Done'; \
          else \
            echo 'The first, you need to login and build the image'; \
          fi
        component: buildah-dev

  - name: '4. Create Gist with devfile.yaml'
    actions:
      - workdir: /projects/che-sidecar-kubernetes-tooling
        type: exec
        command: |
          if [ -f "/tmp/username" ]; then \
            echo 'Downloading template for devfile.yaml...'; \
            curl -o /tmp/devfile-template.yaml https://raw.githubusercontent.com/vitaliy-guliy/che-sidecar-kubernetes-tooling/dev/devfile-template.yaml; \
            echo 'Generating devfile.yaml...'; \
            PLUGIN_GIST_URL=`cat /tmp/plugin.gist.url`; \
            DEVFILE_YAML=`node -pe "JSON.stringify(require('fs').readFileSync('/tmp/devfile-template.meta.yaml').toString().replace(/PLUGIN_GIST_URL/g, '$PLUGIN_GIST_URL'))"`; \
            read -p "GitHub login: " GITHUB_LOGIN; \
            read -s -p "GitHub password: " GITHUB_PASSWORD; \
            echo 'Pushing devfile.yaml to gist...'; \
            POST_DATA='{"public":true,"files":{"devfile.yaml":{"content":'$PLUGIN_META_YAML'}}}'; \
            CURL_COMMAND=`echo "curl -X POST -d '"$POST_DATA"' -u "$GITHUB_LOGIN:$GITHUB_PASSWORD" https://api.github.com/gists > /tmp/plugin.gist.json"`; \
            eval $CURL_COMMAND; \
            META_YAML_RAW_URL=`node -pe "JSON.parse(require('fs').readFileSync('/tmp/plugin.gist.json').toString()).files['plugin.meta.yaml'].raw_url"`; \
            echo 'Plugin meta.yaml URL' $META_YAML_RAW_URL; \
            echo $META_YAML_RAW_URL > /tmp/plugin.gist.url
            echo 'Done'; \
          else \
            echo 'The first, you need to login and build the image'; \
          fi
        component: buildah-dev

